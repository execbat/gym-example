diff --git a/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc b/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc
index 7a1ddda..65bd154 100644
Binary files a/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc and b/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc differ
diff --git a/gym-examples/gym_examples/envs/trader.py b/gym-examples/gym_examples/envs/trader.py
index eb0950c..50986d0 100644
--- a/gym-examples/gym_examples/envs/trader.py
+++ b/gym-examples/gym_examples/envs/trader.py
@@ -3,7 +3,7 @@ import pygame
 
 import gymnasium as gym
 from gymnasium import spaces
-#from gymnasium.spaces import Dict, Box, Discrete
+from gymnasium.spaces.utils import flatten_space
 import random
 
 np.set_printoptions(suppress=True,precision=5)
@@ -38,7 +38,9 @@ class Broker:
         amount_to_buy = exchange_details[2]
         actual_course_mtx = self.market.get_course_mtx()
         
-        amount_to_sell = actual_course_mtx[target_curr_idx, source_curr_idx] * amount_to_buy
+        
+        
+        amount_to_sell = actual_course_mtx[int(target_curr_idx), int(source_curr_idx)] * amount_to_buy
         
         return {source_curr_idx : amount_to_sell}
         
@@ -216,7 +218,10 @@ class TraderEnv(gym.Env):
         #        
         #    }
         #)
-        self.observation_space = spaces.Box(0.0, 9999.0, shape=(self.num_of_currencies + 1,self.num_of_currencies), dtype=float)
+        #self.observation_space = spaces.Box(0.0, 9999.0, shape=(self.num_of_currencies + 1,self.num_of_currencies), dtype=float)
+        self.observation_space = flatten_space(spaces.Box(0.0, 9999.0, shape=(self.num_of_currencies + 1,self.num_of_currencies), dtype=float))
+        
+        
 
         # We have 2 actions, 0 - do nothing, 1 - exchange
         #self.action_space = spaces.Discrete(4)
@@ -232,9 +237,9 @@ class TraderEnv(gym.Env):
         #                            }                
         #)
         self.action_space = spaces.Tuple((
-                                    spaces.Discrete(3, start = -1),                                                                     # {-1,0,1} Action_type
-                                    spaces.Tuple((spaces.Discrete(self.num_of_currencies),  spaces.Discrete(self.num_of_currencies) )), # {0,1,2}  one of them
-                                    spaces.Discrete(999, start = 1)                                                                     #  Amount 1- 999
+                                    spaces.Discrete(3, start = -1, seed=42),                                                                     # {-1,0,1} Action_type
+                                    spaces.Tuple((spaces.Discrete(self.num_of_currencies, seed=42),  spaces.Discrete(self.num_of_currencies, seed=42) )), # {0,1,2}  one of them
+                                    spaces.Discrete(999, start = 1, seed=42)                                                                     #  Amount 1- 999
                                     ))                                
                                     
                                                     
@@ -272,7 +277,8 @@ class TraderEnv(gym.Env):
         wallet_np_arr = np.fromiter(wallet_dict.values(), dtype=float)
         course_mtx = self.market.get_course_mtx()
         
-        observation = np.vstack((wallet_np_arr, course_mtx), dtype=float)
+        #observation = np.vstack((wallet_np_arr, course_mtx), dtype=float)
+        observation = np.vstack((wallet_np_arr, course_mtx), dtype=float).flatten()
         return observation
 
     def _get_info(self):
@@ -317,7 +323,7 @@ class TraderEnv(gym.Env):
             
             # CHECKING IF CHANGING THE DIFFERENT CURRENCIES
             if source_curr_idx == target_curr_idx:
-                penalty = -100 # penalty because agent trying to exchange the same currencies. change to global par
+                penalty = -1000 # penalty because agent trying to exchange the same currencies. change to global par
                 break        
         
             # FIGURING OUT HOW MANY SOURCE CURRENCY TO BE PROCESSED
@@ -326,13 +332,13 @@ class TraderEnv(gym.Env):
             elif action_type == -1:
                 curr_amount_to_sell = {source_curr_idx : amount}
             else:
-                penalty = -10 # penalty because agent prefer to don't do anything. change to global par
+                penalty = -1000 # penalty because agent prefer to don't do anything. change to global par
                 break # no sense to proceed due to Action_type is 0.          
                         
             # CHECK IF I HAVE ENOUGH TO SELL
             reserved_amount_to_sell = self.agents_account.reserve_curr_for_broker(currency_amount = curr_amount_to_sell)
             if reserved_amount_to_sell is None:
-                penalty = -100 # penalty because agent trying to sell more than he has in his wallet. change to global par
+                penalty = -1000 # penalty because agent trying to sell more than he has in his wallet. change to global par
                 break # no sense to proceed due to incorrect amount to sell.
                 
             # EXCHANGE SOURCE CURRENCY TO TARGET CURRENCY WITH BROKER
@@ -342,7 +348,7 @@ class TraderEnv(gym.Env):
             self.agents_account.adopt_curr_from_broker(exchanged_amount_by_broker)
             
             # IF YOU REACHED THIS POINT, THEN EXCHANGE HAS BEEN SUCCESSFULL. AND WE NEED TO GET OUT FROM while loop anyway.
-            deal_completed_reward += 100
+            deal_completed_reward += 0
             break
         
         
diff --git a/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723228493.evgenii-Precision-7540 b/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723228493.evgenii-Precision-7540
deleted file mode 100644
index 54c14ac..0000000
Binary files a/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723228493.evgenii-Precision-7540 and /dev/null differ
diff --git a/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723319160.evgenii-Precision-7540 b/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723319160.evgenii-Precision-7540
deleted file mode 100644
index 290ee73..0000000
Binary files a/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723319160.evgenii-Precision-7540 and /dev/null differ
diff --git a/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723320743.evgenii-Precision-7540 b/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723320743.evgenii-Precision-7540
deleted file mode 100644
index 699ded9..0000000
Binary files a/train_dir/example_gymnasium_trader/.summary/0/events.out.tfevents.1723320743.evgenii-Precision-7540 and /dev/null differ
diff --git a/train_dir/example_gymnasium_trader/config.json b/train_dir/example_gymnasium_trader/config.json
index db6250a..a312863 100644
--- a/train_dir/example_gymnasium_trader/config.json
+++ b/train_dir/example_gymnasium_trader/config.json
@@ -16,15 +16,15 @@
   "policy_workers_per_policy": 2,
   "max_policy_lag": 1000,
   "num_workers": 8,
-  "num_envs_per_worker": 20,
+  "num_envs_per_worker": 10,
   "batch_size": 512,
   "num_batches_per_epoch": 1,
   "num_epochs": 1,
-  "rollout": 32,
-  "recurrence": 1,
+  "rollout": 128,
+  "recurrence": 128,
   "shuffle_minibatches": false,
   "gamma": 0.99,
-  "reward_scale": 0.1,
+  "reward_scale": 1.0,
   "reward_clip": 1000.0,
   "value_bootstrap": false,
   "normalize_returns": true,
@@ -83,7 +83,7 @@
   "encoder_conv_mlp_layers": [
     512
   ],
-  "use_rnn": false,
+  "use_rnn": true,
   "rnn_size": 512,
   "rnn_type": "gru",
   "rnn_num_layers": 1,
@@ -120,21 +120,20 @@
   "pbt_target_objective": "true_objective",
   "pbt_perturb_min": 1.1,
   "pbt_perturb_max": 1.5,
-  "command_line": "--algo=APPO --use_rnn=False --num_envs_per_worker=20 --policy_workers_per_policy=2 --recurrence=1 --with_vtrace=False --batch_size=512 --reward_scale=0.1 --save_every_sec=10 --experiment_summaries_interval=10 --experiment=example_gymnasium_trader --env=gym_examples/Trader-v0",
+  "command_line": "--algo=APPO --use_rnn=True --num_envs_per_worker=10 --policy_workers_per_policy=2 --recurrence=-1 --rollout 128 --with_vtrace=False --batch_size=512 --save_every_sec=10 --experiment=example_gymnasium_trader --env=gym_examples/Trader-v0",
   "cli_args": {
     "algo": "APPO",
     "env": "gym_examples/Trader-v0",
     "experiment": "example_gymnasium_trader",
     "policy_workers_per_policy": 2,
-    "num_envs_per_worker": 20,
+    "num_envs_per_worker": 10,
     "batch_size": 512,
-    "recurrence": 1,
-    "reward_scale": 0.1,
+    "rollout": 128,
+    "recurrence": -1,
     "with_vtrace": false,
-    "experiment_summaries_interval": 10,
     "save_every_sec": 10,
-    "use_rnn": false
+    "use_rnn": true
   },
-  "git_hash": "ba3c9da683048fc820c4d0aafb60772cc5f27b6b",
+  "git_hash": "96b144975203e7cb29c2eddeafcd351d4f25becf",
   "git_repo_name": "https://github.com/execbat/gym-example"
 }
\ No newline at end of file
diff --git a/train_dir/example_gymnasium_trader/git.diff b/train_dir/example_gymnasium_trader/git.diff
index 54eeb89..5a39f34 100644
--- a/train_dir/example_gymnasium_trader/git.diff
+++ b/train_dir/example_gymnasium_trader/git.diff
@@ -1,52 +0,0 @@
-diff --git a/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc b/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc
-index 7212552..f532c6b 100644
-Binary files a/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc and b/gym-examples/gym_examples/envs/__pycache__/trader.cpython-39.pyc differ
-diff --git a/gym-examples/gym_examples/envs/trader.py b/gym-examples/gym_examples/envs/trader.py
-index 9a8a32d..5a8213f 100644
---- a/gym-examples/gym_examples/envs/trader.py
-+++ b/gym-examples/gym_examples/envs/trader.py
-@@ -222,17 +222,25 @@ class TraderEnv(gym.Env):
- 
-         # We have 2 actions, 0 - do nothing, 1 - exchange
-         #self.action_space = spaces.Discrete(4)
--        self.action_space = spaces.Dict(
--                                    {"Action_type" : spaces.Discrete(3, start = -1),  # {-1,0,1}
--                                    "Exchangable_currency" : spaces.Dict(
--                                                                    {"Source_curr" : spaces.Discrete(self.num_of_currencies),  # {0,1,2} one of them
--                                                                    "Target_curr" : spaces.Discrete(self.num_of_currencies)
--                                                                    }
--                                                                ),
--                                    "Amount": spaces.Discrete(self.buy_amount_max, start = 1)                                    
-+        #self.action_space = spaces.Dict(
-+        #                            {"Action_type" : spaces.Discrete(3, start = -1),  # {-1,0,1}
-+        #                            "Exchangable_currency" : spaces.Dict(
-+        #                                                            {"Source_curr" : spaces.Discrete(self.num_of_currencies),  # {0,1,2} one of them
-+        #                                                            "Target_curr" : spaces.Discrete(self.num_of_currencies)
-+        #                                                            }
-+        #                                                        ),
-+        #                            "Amount": spaces.Discrete(self.buy_amount_max, start = 1)                                    
-+        #                            
-+        #                            }                
-+        #)
-+        self.action_space = spaces.Tuple((
-+                                    spaces.Discrete(3, start = -1),                                                                     # {-1,0,1} Action_type
-+                                    spaces.Tuple((spaces.Discrete(self.num_of_currencies),  spaces.Discrete(self.num_of_currencies) )), # {0,1,2}  one of them
-+                                    spaces.Discrete(999, start = 1)                                                                     #  Amount 1- 999
-+                                    ))                                
-                                     
--                                    }                
--        )
-+                                                    
-+        print('PASSED')
-         
- 
-         """
-diff --git a/train_dir/example_gymnasium_trader/sf_log.txt b/train_dir/example_gymnasium_trader/sf_log.txt
-index 64ded12..e64cfc9 100644
---- a/train_dir/example_gymnasium_trader/sf_log.txt
-+++ b/train_dir/example_gymnasium_trader/sf_log.txt
-@@ -16,3 +16,4 @@
- [2024-08-10 20:46:02,980][05508] Rollout worker 5 uses device cpu
- [2024-08-10 20:46:02,981][05508] Rollout worker 6 uses device cpu
- [2024-08-10 20:46:02,981][05508] Rollout worker 7 uses device cpu
-+[2024-08-10 21:12:25,538][06630] Saving configuration to /home/evgenii/Documents/Jupyter_notebooks/SAMPLE_FACTORY/TRADER_PROJECT/train_dir/example_gymnasium_trader/config.json...
diff --git a/train_dir/example_gymnasium_trader/sf_log.txt b/train_dir/example_gymnasium_trader/sf_log.txt
index 00bedff..b724bc2 100644
--- a/train_dir/example_gymnasium_trader/sf_log.txt
+++ b/train_dir/example_gymnasium_trader/sf_log.txt
@@ -1,109 +1 @@
-[2024-08-09 19:34:56,464][05362] Saving configuration to /home/evgenii/Documents/Jupyter_notebooks/SAMPLE_FACTORY/TRADER_PROJECT/train_dir/example_gymnasium_trader/config.json...
-[2024-08-09 19:34:56,473][05362] Rollout worker 0 uses device cpu
-[2024-08-09 19:34:56,473][05362] Rollout worker 1 uses device cpu
-[2024-08-09 19:34:56,473][05362] Rollout worker 2 uses device cpu
-[2024-08-09 19:34:56,473][05362] Rollout worker 3 uses device cpu
-[2024-08-09 19:34:56,474][05362] Rollout worker 4 uses device cpu
-[2024-08-09 19:34:56,474][05362] Rollout worker 5 uses device cpu
-[2024-08-09 19:34:56,474][05362] Rollout worker 6 uses device cpu
-[2024-08-09 19:34:56,474][05362] Rollout worker 7 uses device cpu
-[2024-08-10 20:46:02,971][05508] Saving configuration to /home/evgenii/Documents/Jupyter_notebooks/SAMPLE_FACTORY/TRADER_PROJECT/train_dir/example_gymnasium_trader/config.json...
-[2024-08-10 20:46:02,980][05508] Rollout worker 0 uses device cpu
-[2024-08-10 20:46:02,980][05508] Rollout worker 1 uses device cpu
-[2024-08-10 20:46:02,980][05508] Rollout worker 2 uses device cpu
-[2024-08-10 20:46:02,980][05508] Rollout worker 3 uses device cpu
-[2024-08-10 20:46:02,980][05508] Rollout worker 4 uses device cpu
-[2024-08-10 20:46:02,980][05508] Rollout worker 5 uses device cpu
-[2024-08-10 20:46:02,981][05508] Rollout worker 6 uses device cpu
-[2024-08-10 20:46:02,981][05508] Rollout worker 7 uses device cpu
-[2024-08-10 21:12:25,538][06630] Saving configuration to /home/evgenii/Documents/Jupyter_notebooks/SAMPLE_FACTORY/TRADER_PROJECT/train_dir/example_gymnasium_trader/config.json...
-[2024-08-10 21:12:25,551][06630] Rollout worker 0 uses device cpu
-[2024-08-10 21:12:25,551][06630] Rollout worker 1 uses device cpu
-[2024-08-10 21:12:25,551][06630] Rollout worker 2 uses device cpu
-[2024-08-10 21:12:25,551][06630] Rollout worker 3 uses device cpu
-[2024-08-10 21:12:25,551][06630] Rollout worker 4 uses device cpu
-[2024-08-10 21:12:25,551][06630] Rollout worker 5 uses device cpu
-[2024-08-10 21:12:25,551][06630] Rollout worker 6 uses device cpu
-[2024-08-10 21:12:25,552][06630] Rollout worker 7 uses device cpu
-[2024-08-10 21:12:25,573][06630] Using GPUs [0] for process 0 (actually maps to GPUs [0])
-[2024-08-10 21:12:25,573][06630] InferenceWorker_p0-w0: min num requests: 1
-[2024-08-10 21:12:25,575][06630] Using GPUs [0] for process 0 (actually maps to GPUs [0])
-[2024-08-10 21:12:25,576][06630] InferenceWorker_p0-w1: min num requests: 1
-[2024-08-10 21:12:25,591][06630] Starting all processes...
-[2024-08-10 21:12:25,591][06630] Starting process learner_proc0
-[2024-08-10 21:12:25,857][06630] Starting all processes...
-[2024-08-10 21:12:25,862][06630] Starting process inference_proc0-0
-[2024-08-10 21:12:25,863][06630] Starting process inference_proc0-1
-[2024-08-10 21:12:25,865][06630] Starting process rollout_proc0
-[2024-08-10 21:12:25,868][06630] Starting process rollout_proc1
-[2024-08-10 21:12:25,874][06630] Starting process rollout_proc2
-[2024-08-10 21:12:25,877][06630] Starting process rollout_proc3
-[2024-08-10 21:12:25,878][06630] Starting process rollout_proc4
-[2024-08-10 21:12:25,880][06630] Starting process rollout_proc5
-[2024-08-10 21:12:25,881][06630] Starting process rollout_proc6
-[2024-08-10 21:12:25,881][06630] Starting process rollout_proc7
-[2024-08-10 21:12:27,530][06687] Worker 1 uses CPU cores [1]
-[2024-08-10 21:12:27,610][06697] Worker 4 uses CPU cores [4]
-[2024-08-10 21:12:27,687][06696] Worker 3 uses CPU cores [3]
-[2024-08-10 21:12:27,690][06714] Worker 6 uses CPU cores [6]
-[2024-08-10 21:12:27,710][06684] Using GPUs [0] for process 0 (actually maps to GPUs [0])
-[2024-08-10 21:12:27,710][06684] Set environment var CUDA_VISIBLE_DEVICES to '0' (GPU indices [0]) for inference process 0
-[2024-08-10 21:12:27,744][06670] Using GPUs [0] for process 0 (actually maps to GPUs [0])
-[2024-08-10 21:12:27,744][06670] Set environment var CUDA_VISIBLE_DEVICES to '0' (GPU indices [0]) for learning process 0
-[2024-08-10 21:12:27,772][06670] Num visible devices: 1
-[2024-08-10 21:12:27,783][06684] Num visible devices: 1
-[2024-08-10 21:12:27,822][06686] Using GPUs [0] for process 0 (actually maps to GPUs [0])
-[2024-08-10 21:12:27,822][06686] Set environment var CUDA_VISIBLE_DEVICES to '0' (GPU indices [0]) for inference process 0
-[2024-08-10 21:12:27,826][06670] Starting seed is not provided
-[2024-08-10 21:12:27,826][06670] Using GPUs [0] for process 0 (actually maps to GPUs [0])
-[2024-08-10 21:12:27,826][06670] Initializing actor-critic model on device cuda:0
-[2024-08-10 21:12:27,827][06670] RunningMeanStd input shape: (4, 3)
-[2024-08-10 21:12:27,829][06670] RunningMeanStd input shape: (1,)
-[2024-08-10 21:12:27,839][06670] ConvEncoder: input_channels=4
-[2024-08-10 21:12:27,850][06686] Num visible devices: 1
-[2024-08-10 21:12:27,854][06670] EvtLoop [learner_proc0_evt_loop, process=learner_proc0] unhandled exception in slot='init' connected to emitter=Emitter(object_id='Runner_EvtLoop', signal_name='start'), args=()
-Traceback (most recent call last):
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/signal_slot/signal_slot.py", line 355, in _process_signal
-    slot_callable(*args)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/algo/learning/learner_worker.py", line 139, in init
-    init_model_data = self.learner.init()
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/algo/learning/learner.py", line 212, in init
-    self.actor_critic = create_actor_critic(self.cfg, self.env_info.obs_space, self.env_info.action_space)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/actor_critic.py", line 296, in create_actor_critic
-    return make_actor_critic_func(cfg, obs_space, action_space)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/actor_critic.py", line 286, in default_make_actor_critic_func
-    return ActorCriticSharedWeights(model_factory, obs_space, action_space, cfg)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/actor_critic.py", line 141, in __init__
-    self.encoder = model_factory.make_model_encoder_func(cfg, obs_space)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/encoder.py", line 242, in default_make_encoder_func
-    return MultiInputEncoder(cfg, obs_space)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/encoder.py", line 51, in __init__
-    self.encoders[obs_key] = encoder_fn(cfg, obs_space[obs_key])
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/encoder.py", line 227, in make_img_encoder
-    return ConvEncoder(cfg, obs_space)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/encoder.py", line 140, in __init__
-    enc = ConvEncoderImpl(obs_space.shape, conv_filters, extra_mlp_layers, activation)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/model/encoder.py", line 112, in __init__
-    self.conv_head_out_size = calc_num_elements(self.conv_head, obs_shape)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/sample_factory/algo/utils/torch_utils.py", line 39, in calc_num_elements
-    num_elements = module(some_input).numel()
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
-    return self._call_impl(*args, **kwargs)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
-    return forward_call(*args, **kwargs)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/container.py", line 219, in forward
-    input = module(input)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
-    return self._call_impl(*args, **kwargs)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
-    return forward_call(*args, **kwargs)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 458, in forward
-    return self._conv_forward(input, self.weight, self.bias)
-  File "/home/evgenii/anaconda3/envs/sample_factory/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
-    return F.conv2d(input, weight, bias, self.stride,
-RuntimeError: Given groups=1, weight of size [32, 4, 8, 8], expected input[1, 1, 4, 3] to have 4 channels, but got 1 channels instead
-[2024-08-10 21:12:27,857][06670] Unhandled exception Given groups=1, weight of size [32, 4, 8, 8], expected input[1, 1, 4, 3] to have 4 channels, but got 1 channels instead in evt loop learner_proc0_evt_loop
-[2024-08-10 21:12:27,890][06705] Worker 5 uses CPU cores [5]
-[2024-08-10 21:12:28,021][06688] Worker 2 uses CPU cores [2]
-[2024-08-10 21:12:28,130][06685] Worker 0 uses CPU cores [0]
-[2024-08-10 21:12:28,166][06706] Worker 7 uses CPU cores [7]
+[2024-08-10 22:22:44,613][11964] Saving configuration to /home/evgenii/Documents/Jupyter_notebooks/SAMPLE_FACTORY/TRADER_PROJECT/train_dir/example_gymnasium_trader/config.json...
